{"name":"Sloth","tagline":"Library to lazy initialize components of a webpage when they become visible","body":"Library to lazy initialize components of a webpage when they become visible\r\n\r\nit listens to scroll event only when some callbacks were registered\r\n\r\nFeatures:\r\n- no dependencies\r\n- fires callback for elements that become visible\r\n- support for threshold - so it can fire callback right before or after an element is visible\r\n- uses AMD\r\n- uses global sloth if no amd defined\r\n- removes listener when it has nothing to do\r\n- works when scrolling down and up\r\n- 459B(!) - minified and gzipped\r\n\r\nBasic usage:\r\n\r\n\tsloth({\r\n\t\ton: element/array of element/node list,\r\n\t\tthreshold: no of pixels [OPTIONAL] - default: 100\r\n\t\tcallback: function to call when element is visible - as parameter it gets element that become visible\r\n\t});\r\n\r\nexample:\r\n\r\n\trequire(['sloth'], function(sloth){\r\n\t\tsloth({\r\n    \t\ton: document.getElementsByTagName('div'),\r\n    \t\tthreshold: 100\r\n    \t\tcallback: function(element){\r\n    \t\t\telement.className += ' visible';\r\n    \t\t}\r\n    \t});\r\n\t});\r\n\r\nor if you don't use any amd framework\r\n\r\n\t\tsloth({\r\n    \t\ton: document.getElementsByTagName('div'),\r\n    \t\tthreshold: 100\r\n    \t\tcallback: function(element){\r\n    \t\t\telement.className += ' visible';\r\n    \t\t}\r\n    \t});\r\n\r\nParameters:\r\n\r\non - element or elements that you want to fire callback on\r\nit can be a single element, a NodeList or an regular array of elements\r\ncallback will be fired for all of these elements\r\n\r\nthreshold - a threshold that sloth should use 100 is a default value\r\nmeans that callback will be fired when element is 100px away from being visible\r\nyou can also pass negative number so callback will be called after an element is visible\r\n\r\ncallback - is a callback to fire when an element is visible (duh...)\r\nthere is one parameter passed to callback and this is an element that has just become visible\r\nso you don't have to guess what to do on which element\r\n\r\n\r\n\r\nAs seen on\r\nhttp://microjs.com/#sloth","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}